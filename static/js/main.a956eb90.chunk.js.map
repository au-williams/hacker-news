{"version":3,"sources":["models/HistoryRecord.js","assets/logo_react.png","constants/SearchSortBy.js","component/Results.js","component/App.js","index.js"],"names":["HistoryRecord","searchTerm","searchSortBy","this","searchDate","Date","Results","route","window","location","pathname","substring","replace","toLowerCase","element","props","isLoading","content","length","map","record","key","points","comments","num_comments","href","objectID","className","title","GetSearchElement","date","toLocaleString","sort","SearchSortBy","GetHistoryElement","id","disabled","isReadOnly","onChange","onSearchTermChange","onKeyDown","onSearchKeyDown","onClick","onSearchClick","defaultChecked","onSearchSortByChange","type","Component","App","state","searchHistory","searchResults","handleKeyDown","e","handleSearch","trim","setState","input","fetch","then","res","json","result","console","log","hits","catch","error","handleSearchSortByChange","target","checked","handleSearchTermChange","value","basename","process","src","Logo","to","path","from","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a956eb90.chunk.js","sourcesContent":["export default class HistoryRecord {\r\n    constructor(searchTerm, searchSortBy) {\r\n        this.searchDate = new Date();\r\n        this.searchTerm = searchTerm;\r\n        this.searchSortBy = searchSortBy;\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logo_react.44461cfe.png\";","// see: https://hn.algolia.com/api\r\nexport default {\r\n    DATE: \"search_by_date\",\r\n    RELEVANCE: \"search\"\r\n};\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport SearchSortBy from \"../constants/SearchSortBy\";\r\n\r\n// build elements based on the HistoryRecord data model\r\nconst GetHistoryElement = (record, key) => {\r\n  const date = record.searchDate.toLocaleString();\r\n  const sort =\r\n    record.searchSortBy === SearchSortBy.RELEVANCE ? \"relevance\" : \"date\";\r\n\r\n  return (\r\n    <div>\r\n      <div>{key + 1}.</div>\r\n      <div>\r\n        <div className=\"result-head\">{record.searchTerm}</div>\r\n        <div className=\"result-desc\">{`${date} | Sorted by ${sort}`}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// build elements based on the HackerNews API object\r\nconst GetSearchElement = (record, key) => {\r\n  const points = `${record.points} point${record.points === 1 ? \"\" : \"s\"}`;\r\n  const comments = `${record.num_comments} comment${\r\n    record.num_comments === 1 ? \"\" : \"s\"\r\n  }`;\r\n\r\n  return (\r\n    <a href={`https://news.ycombinator.com/item?id=${record.objectID}`}>\r\n      <div>{key + 1}.</div>\r\n      <div>\r\n        <div className=\"result-head\">{record.title}</div>\r\n        <div className=\"result-desc\">{`${points} | ${comments}`}</div>\r\n      </div>\r\n    </a>\r\n  );\r\n};\r\n\r\nclass Results extends Component {\r\n  render() {\r\n    // substring(13) to remove the leading /hacker-news/ location path\r\n    // see: https://austinwilliams.dev/hacker-news/ for a live version\r\n    const route = window.location.pathname\r\n      .substring(13)\r\n      .replace(\"/\", \"\")\r\n      .toLowerCase();\r\n    let element = null;\r\n\r\n    if (this.props.isLoading) {\r\n      element = <div>Fetching API results ...</div>;\r\n    } else if (!this.props.content || !this.props.content.length) {\r\n      element = <div>No {route} results!</div>;\r\n    } else {\r\n      element = this.props.content.map((record, key) =>\r\n        route === \"search\"\r\n          ? GetSearchElement(record, key)\r\n          : GetHistoryElement(record, key)\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div id=\"search-bar\">\r\n          <label>Search</label>\r\n          <input\r\n            disabled={this.props.isReadOnly}\r\n            onChange={this.props.onSearchTermChange}\r\n            onKeyDown={this.props.onSearchKeyDown}\r\n          />\r\n          <button\r\n            disabled={this.props.isReadOnly}\r\n            onClick={this.props.onSearchClick}\r\n          >\r\n            â†’\r\n          </button>\r\n          <label>\r\n            <input\r\n              defaultChecked=\"true\"\r\n              disabled={this.props.isReadOnly}\r\n              onChange={this.props.onSearchSortByChange}\r\n              type=\"checkbox\"\r\n            />\r\n            Sort by relevance\r\n          </label>\r\n        </div>\r\n        <div id=\"search-results\">{element}</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Results;\r\n","import \"./App.css\";\r\nimport HistoryRecord from \"../models/HistoryRecord\";\r\nimport Logo from \"../assets/logo_react.png\";\r\nimport React, { Component } from \"react\";\r\nimport Results from \"./Results\";\r\nimport SearchSortBy from \"../constants/SearchSortBy\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    searchHistory: [],\r\n    searchResults: [],\r\n    searchSortBy: SearchSortBy.RELEVANCE,\r\n    searchTerm: \"\",\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.key !== \"Enter\") return;\r\n    this.handleSearch();\r\n  };\r\n\r\n  handleSearch = () => {\r\n    const isNullOrWhiteSpace =\r\n      !this.state.searchTerm || !this.state.searchTerm.trim();\r\n\r\n    if (isNullOrWhiteSpace) {\r\n      // dont send empty data into the api\r\n      this.setState({ searchResults: [] });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      isLoading: true,\r\n      searchHistory: [\r\n        ...this.state.searchHistory,\r\n        new HistoryRecord(this.state.searchTerm, this.state.searchSortBy),\r\n      ],\r\n    });\r\n\r\n    const input = `https://hn.algolia.com/api/v1/${this.state.searchSortBy}?tags=story&query=${this.state.searchTerm}`;\r\n\r\n    fetch(input)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result.hits);\r\n        this.setState({ isLoading: false, searchResults: result.hits });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  handleSearchSortByChange = (e) => {\r\n    this.setState({\r\n      searchSortBy: e.target.checked\r\n        ? SearchSortBy.RELEVANCE\r\n        : SearchSortBy.DATE,\r\n    });\r\n  };\r\n\r\n  handleSearchTermChange = (e) => {\r\n    this.setState({ searchTerm: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div id=\"content\">\r\n          <nav>\r\n            <img src={Logo}></img>\r\n            <span>\r\n              <strong>Hacker News</strong> Search App\r\n            </span>\r\n            <ul>\r\n              [\r\n              <li>\r\n                <Link to=\"/search\">search</Link>\r\n              </li>\r\n              |\r\n              <li>\r\n                <Link to=\"/history\">history</Link>\r\n              </li>\r\n              ]\r\n            </ul>\r\n            <div>\r\n              <strong>Made by:</strong>\r\n              <a href=\"https://www.linkedin.com/in/auwilliams/\">\r\n                Austin Williams\r\n              </a>\r\n            </div>\r\n          </nav>\r\n          {/*\r\n            The application architecture was designed to utilize the same results view\r\n            to support future enhancements ... Such as searching through history items.\r\n            For now make the history inputs read-only until that work has been defined.\r\n          */}\r\n          <Switch>\r\n            <Route path=\"/search\">\r\n              <Results\r\n                content={this.state.searchResults}\r\n                isLoading={this.state.isLoading}\r\n                isReadOnly={false}\r\n                onSearchClick={this.handleSearch}\r\n                onSearchKeyDown={this.handleKeyDown}\r\n                onSearchSortByChange={this.handleSearchSortByChange}\r\n                onSearchTermChange={this.handleSearchTermChange}\r\n              />\r\n            </Route>\r\n            <Route path=\"/history\">\r\n              <Results content={this.state.searchHistory} isReadOnly={true} />\r\n            </Route>\r\n            <Redirect from=\"/\" to=\"/search\" />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './component/App';\r\nimport './index.css';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}